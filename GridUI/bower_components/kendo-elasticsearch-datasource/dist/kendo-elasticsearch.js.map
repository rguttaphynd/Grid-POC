{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4337f86bd56ea22e4dea","webpack:///./src/kendo-elasticsearch.js","webpack:///./src/sort.js","webpack:///./src/groups.js","webpack:///./src/aggregations.js","webpack:///./src/es-utils.js","webpack:///./src/data-items.js","webpack:///./src/filters.js","webpack:///./src/fields.js"],"names":["sort","groups","aggregations","filters","esUtils","dataItems","fields","data","kendo","ElasticSearchDataSource","DataSource","extend","init","initOptions","Error","transport","read","url","readTransport","dataType","method","contentType","_model","schema","model","esMapping","kendoFieldsFromESMapping","fill","_nestedFields","_subTypes","Object","keys","forEach","field","fieldKey","esNestedPath","push","esName","esParentType","esChildType","parameterMap","sortParams","prepareParams","group","columns","esParams","skip","from","take","size","aggregationsOnly","kendo2es","query","filtered","filter","innerHits","esMappingKey","_source","k","map","aggs","aggregate","JSON","stringify","parse","response","items","fromHits","hits","doc_count","total","aggregates","es2kendo","grps","id","serverFiltering","serverSorting","serverPaging","serverAggregates","serverGrouping","fn","call","fromMapping","_kendo2es","_prepareParams","nestedPath","sortItem","esFilterName","order","dir","missing","mode","sortArray","constructor","Array","fullSort","matchingSort","length","splice","indexOf","concat","_es2kendo","nestedFields","previousLevelAggs","previousLevelNestedPath","nextLevelAggs","_kendoGroup2es","nested","path","esFullNestedPath","previousLevelAgg","aggKey","groupAgg","missingAgg","fieldAggregate","groupAggregates","type","esAggName","interval","terms","esGroupAggregates","_parseGroupAggregations","missingNested","groupAggregations","substr","allGroups","groupDefs","_esAgg2kendo","groupAggregation","fillInGroups","key","hasSubgroups","buckets","bucketKey","bucket","missingAggregation","groupsMap","groupKeys","key_as_string","value","count","kendoToESAgg","min","max","sum","average","groupNestedPath","esAggs","aggItem","aggsWrapper","previousPathParts","group_reverse_nested","reverse_nested","split","nestedPathPart","currentPath","join","fullCurrentPath","currentFields","innerHitsFilter","previousAggregates","suffixLength","aggType","_innerHits","_innerHitsFilter","subTypes","previousLevelInnerHits","inner_hits","subType","$","logicFilter","or","and","childFilter","not","has_child","has_parent","_fillInGroups","_fromHits","dataItem","fieldValue","Date","i","groupDefValue","groupDefNextValue","_getValuesFromSource","source","pathParts","values","undefined","isArray","valueItem","slice","innerPath","hitSource","hit","_id","esNameSplit","duration","moment","startOf","diff","esMultiSplit","esMultiSeparator","splittedItems","innerHitKey","nestedItems","newSplittedDataItems","splittedItem","nestedItem","mergedItem","_splitMultiValues","results","itemResults","item","partialItemResults","newResult","result","k2","val","kendoFilters","logicalConnective","operator","logic","esFilters","esNestedFilters","esFilter","query_string","_filterParam","analyze_wildcard","esNestedFilter","kendoFilter","subtract","format","add","fieldName","esSearchName","fieldEscaped","_asESParameter","valueEscaped","simpleBinaryOperators","eq","search","lt","lte","gt","gte","esOperator","expression","escapeValueRegexp","escapeSearchValueRegexp","toISOString","replace","match","_fromMapping","_fill","mapping","prefix","esPrefix","properties","property","propertyKey","curedPropertyKey","asKendoPropertyKey","prefixedName","subNestedPath","index","esSearchSubField","esFilterSubField","esAggSubField","hasOwnProperty","esStringSubFields","agg"],"mappings":"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","file":"kendo-elasticsearch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kendo-elasticsearch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kendo-elasticsearch\"] = factory();\n\telse\n\t\troot[\"kendo-elasticsearch\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4337f86bd56ea22e4dea\n **/","/**\n * A Kendo DataSource that gets its data from ElasticSearch.\n *\n * Read-only, supports paging, filtering, sorting, grouping and aggregations.\n */\n\nimport * as sort from './sort';\nimport * as groups from './groups';\nimport * as aggregations from './aggregations';\nimport * as filters from './filters';\nimport * as esUtils from './es-utils';\nimport * as dataItems from './data-items';\nimport * as fields from './fields';\n\nconst data = kendo.data;\n\ndata.ElasticSearchDataSource = data.DataSource.extend({\n  init(initOptions) {\n    if (!initOptions) {\n      throw new Error('Options are required to use ElasticSearchDataSource');\n    }\n\n    // Prepare the transport to query ES\n    // The only required parameter is transport.read.url\n    if (initOptions.transport && initOptions.transport.read && initOptions.transport.read.url) {\n      const readTransport = initOptions.transport.read;\n      readTransport.dataType = readTransport.dataType || 'json';\n      readTransport.method = readTransport.method || 'POST';\n      readTransport.contentType = readTransport.contentType || 'application/json';\n    } else {\n      throw new Error('transport.read.url must be set to use ElasticSearchDataSource');\n    }\n\n    const _model = initOptions.schema && initOptions.schema.model;\n    if (!_model) {\n      throw new Error('transport.schema.model must be set to use ElasticSearchDataSource');\n    }\n    if (_model.esMapping) {\n      _model.fields = _model.fields || {};\n      data.ElasticSearchDataSource.kendoFieldsFromESMapping(\n        _model.esMapping, _model, _model.fields);\n    } else {\n      if (!_model.fields) {\n        throw new Error('transport.schema.model.fields/esMapping must be set');\n      }\n      fields.fill(_model.fields, _model);\n    }\n\n    // Get sets of nesting levels\n    const _nestedFields = {};\n    const _subTypes = {};\n    Object.keys(_model.fields).forEach(fieldKey => {\n      const field = _model.fields[fieldKey];\n      if (field.esNestedPath) {\n        _nestedFields[field.esNestedPath] = _nestedFields[field.esNestedPath] || [];\n        _nestedFields[field.esNestedPath].push(field.esName);\n      }\n      if (field.esParentType) {\n        _subTypes[field.esParentType] = _subTypes[field.esParentType] || [];\n        _subTypes[field.esParentType].push(field.esName);\n      }\n      if (field.esChildType) {\n        _subTypes[field.esChildType] = _subTypes[field.esChildType] || [];\n        _subTypes[field.esChildType].push(field.esName);\n      }\n    });\n\n    // Prepare the content of the query that will be sent to ES\n    // based on the kendo data structure\n    initOptions.transport.parameterMap = function (data) {\n      const sortParams = sort.prepareParams(data.sort, data.group, data.columns);\n\n      const esParams = {};\n      if (data.skip) {\n        esParams.from = data.skip;\n      }\n      if (data.take) {\n        esParams.size = data.take;\n      }\n\n      if (initOptions.aggregationsOnly) {\n        esParams.from = 0;\n        esParams.size = 0;\n      }\n\n      // Transform kendo sort params in a ES sort list\n      esParams.sort = sort.kendo2es(sortParams, _model.fields);\n\n      // Transform kendo filters into a ES query using a query_string request\n      esParams.query = {\n        filtered: {\n          filter: filters.kendo2es(data.filter || [], _model.fields)\n        }\n      };\n\n      // Add a top level inner_hits definition for nested/parent/child docs\n      esParams['inner_hits'] = esUtils.innerHits(\n        _nestedFields,\n        _model.esMappingKey,\n        _subTypes,\n        esParams.sort,\n        esParams.query.filtered.filter\n      );\n\n      // Fetch only the required list of fields from ES\n      esParams._source = Object.keys(_model.fields)\n        .filter(k =>\n          !_model.fields[k].esNestedPath &&\n          !_model.fields[k].esParentType &&\n          !_model.fields[k].esChildType)\n        .map(k => _model.fields[k].esName);\n\n      // Transform kendo aggregations into ES aggregations\n      esParams.aggs = aggregations.kendo2es(\n        data.aggregate,\n        _model.fields,\n        _nestedFields,\n        _model.esMappingKey,\n        esParams.query.filtered.filter\n      );\n\n      // Transform Kendo group instruction into an ES bucket aggregation\n      groups.kendo2es(\n        esParams.aggs,\n        data.group,\n        _model.fields,\n        _nestedFields,\n        _model.esMappingKey,\n        esParams.query.filtered.filter\n      );\n\n      return JSON.stringify(esParams);\n    };\n\n    const schema = initOptions.schema;\n\n    // Parse the results from elasticsearch to return data items,\n    // total and aggregates for Kendo grid\n    schema.parse = function (response) {\n      const items = dataItems.fromHits(response.hits.hits, _model.fields);\n\n      // cheat. Root aggregations used as a pseudo buckets with doc_count = total number of results\n      // used to process missing counts\n      if (response.aggregations) {\n        response.aggregations.doc_count = response.hits.total;\n      }\n      const aggregates = aggregations.es2kendo(response.aggregations);\n      const grps = groups.es2kendo(items, response.aggregations, _model.fields, initOptions.aggregationsOnly);\n\n      return {\n        total: response.hits.total,\n        data: items,\n        aggregates: aggregates,\n        groups: grps\n      };\n    };\n\n    schema.aggregates = response => response.aggregates;\n    schema.groups = response => response.groups;\n\n    schema.data = schema.data || 'data';\n    schema.total = schema.total || 'total';\n    schema.model.id = schema.model.id || '_id';\n\n    initOptions.serverFiltering = true;\n    initOptions.serverSorting = true;\n    initOptions.serverPaging = true;\n    initOptions.serverAggregates = true;\n    initOptions.serverGrouping = true;\n\n    data.DataSource.fn.init.call(this, initOptions);\n  }\n});\n\ndata.ElasticSearchDataSource.kendoFieldsFromESMapping = fields.fromMapping;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/kendo-elasticsearch.js\n **/","export const kendo2es = _kendo2es;\nexport const prepareParams = _prepareParams;\n\n// Transform sort instruction into some object suitable for Elasticsearch\n// Also deal with sorting the different nesting levels\nfunction _kendo2es(sort, fields, nestedPath) {\n  return sort.filter(sortItem => {\n    const field = fields[sortItem.field];\n    if (!field) return false;\n    return field.esNestedPath === nestedPath ||\n      field.esParentType === nestedPath ||\n      field.esChildType === nestedPath;\n  }).map(sortItem => {\n    return {\n      [fields[sortItem.field].esFilterName]: {\n        order: sortItem.dir,\n        // Always put items without the sorted key at the end\n        missing: '_last',\n        // Deal with sorting items by a property in nested documents\n        mode: sortItem.dir === 'asc' ? 'min' : 'max'\n      }\n    };\n  });\n};\n\n// Prepare sort parameters for easier transformation to ES later on\nfunction _prepareParams(sort, groups = []) {\n  // first fix the type of the param that can be object of group\n  // we always parse as an array\n  // http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-sort\n  let sortArray = [];\n  if (sort && sort.constructor === Array) {\n    sortArray = sort;\n  } else {\n    if (sort) {\n      sortArray.push(sort);\n    }\n  }\n\n  // Sort instructions for the groups are first\n  let fullSort = [];\n  groups.forEach(group => {\n    const matchingSort = sortArray.filter(function (sortItem) {\n      return sortItem.field === group.field;\n    });\n    if (matchingSort.length) {\n      fullSort.push(matchingSort[0]);\n      sortArray.splice(sortArray.indexOf(matchingSort[0]), 1);\n    } else {\n      // Sort by default\n      fullSort.push({\n        field: group.field,\n        dir: group.dir || 'asc'\n      });\n    }\n  });\n\n  // Then original sort instructions are added\n  fullSort = fullSort.concat(sortArray);\n\n  return fullSort;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/sort.js\n **/","import * as aggregations from './aggregations';\nimport * as dataItems from './data-items';\nexport const kendo2es = _kendo2es;\nexport const es2kendo = _es2kendo;\n\n// Transform kendo groups declaration into ES bucket aggregations\nfunction _kendo2es(aggs, groups, fields, nestedFields, esMappingKey, filter) {\n  let previousLevelAggs = [aggs];\n  let previousLevelNestedPath = null;\n  groups.forEach(group => {\n    const field = fields[group.field];\n    const nextLevelAggs = _kendoGroup2es(group, fields, nestedFields, esMappingKey, filter);\n\n    const aggs = {};\n    if (field.esNestedPath && field.esNestedPath.indexOf(previousLevelNestedPath) !== 0) {\n      aggs[field.esNestedPath + '_nested'] = aggs[field.esNestedPath + '_nested'] || {\n        nested: {\n          path: field.esFullNestedPath\n        },\n        aggs: {}\n      };\n      aggs[field.esNestedPath + '_nested'].aggs[group.field + '_group'] = nextLevelAggs.group;\n      aggs[field.esNestedPath + '_nested'].aggs[group.field + '_missing'] = nextLevelAggs.missing;\n    } else {\n      aggs[group.field + '_group'] = nextLevelAggs.group;\n      aggs[group.field + '_missing'] = nextLevelAggs.missing;\n    } // 3rd case for nested path that is not child of the previous group\n\n    previousLevelAggs.forEach(previousLevelAgg => {\n      Object.keys(aggs).forEach(aggKey => {\n        previousLevelAgg[aggKey] = aggs[aggKey];\n      });\n    });\n    previousLevelAggs = Object.keys(nextLevelAggs).map(aggKey => {\n      return nextLevelAggs[aggKey].aggregations;\n    });\n    previousLevelNestedPath = field.esNestedPath;\n  });\n}\n\nfunction _kendoGroup2es(group, fields, nestedFields, esMappingKey, filter) {\n  const field = fields[group.field];\n  const groupAgg = {};\n  const missingAgg = {};\n\n  // Look for a aggregate defined on group field\n  // Used to customize the bucket aggregation for range, histograms, etc.\n  let fieldAggregate;\n  const groupAggregates = [];\n  (group.aggregates || []).forEach(aggregate => {\n    // We exclude strings that are not concerned by specific aggregations (only terms buckets)\n    // And cause bugs when counting cardinality on own group.\n    if (aggregate.field === group.field && field.type !== 'string') {\n      fieldAggregate = aggregate;\n    } else {\n      groupAggregates.push(aggregate);\n    }\n  });\n\n  if (fieldAggregate) {\n\n    // We support date histogramms if a 'interval' key is passed\n    // to the group definition\n    groupAgg[fieldAggregate.aggregate] = {\n      field: field.esAggName\n    };\n    if (fieldAggregate.interval) {\n      groupAgg[fieldAggregate.aggregate].interval = fieldAggregate.interval;\n    }\n  } else {\n\n    // Default is a term bucket aggregation\n    // if used on a not analyzed field or subfield\n    // it will create a group for each value of the field\n    groupAgg.terms = {\n      field: field.esAggName,\n      size: 0\n    };\n  }\n\n  missingAgg.missing = {\n    field: field.esAggName\n  };\n\n  const esGroupAggregates = aggregations.kendo2es(\n    groupAggregates,\n    fields,\n    nestedFields,\n    esMappingKey,\n    filter,\n    field.esNestedPath\n  );\n  groupAgg.aggregations = esGroupAggregates;\n  missingAgg.aggregations = esGroupAggregates;\n\n  return {\n    group: groupAgg,\n    missing: missingAgg\n  };\n}\n\n// Extraction aggregations from ES query result that will be used to group\n// data items\nfunction _parseGroupAggregations(aggregations, missingNested) {\n  let groupAggregations = Object.keys(aggregations).filter(aggKey => {\n    return aggKey.substr(aggKey.length - 6) === '_group';\n  }).map(aggKey => {\n    const fieldKey = aggKey.substr(0, aggKey.length - 6);\n    if (missingNested) {\n      aggregations[fieldKey + '_missing'].doc_count += missingNested;\n    }\n    return {\n      group: aggregations[aggKey],\n      missing: aggregations[fieldKey + '_missing'],\n      fieldKey: fieldKey\n    };\n  });\n\n  // extract other group aggregations from nested aggregations\n  Object.keys(aggregations)\n    .filter(aggKey => aggKey.substr(aggKey.length - 7) === '_nested')\n    .forEach(aggKey => {\n      // 'missing' count on a nested group aggregation =\n      //      'document without nested objects' + 'nested objects with missing field'\n      // and 'document without nested objects' is equal to 'number of documents' - 'number of nested documents'\n      const missingNested = aggregations.doc_count - aggregations[aggKey].doc_count;\n      groupAggregations =\n        groupAggregations.concat(_parseGroupAggregations(aggregations[aggKey], missingNested));\n    });\n\n  return groupAggregations;\n}\n\n// Transform ES bucket aggregations into kendo groups of data items\n// See doc here for format of groups:\n// http://docs.telerik.com/KENDO-UI/api/javascript/data/datasource#configuration-schema.groups\nfunction _es2kendo(items, aggregations, fields, aggregationsOnly) {\n  let allGroups = [];\n  if (aggregations) {\n    const groupAggregations = _parseGroupAggregations(aggregations);\n\n    // Find aggregations that are grouping aggregations (ie buckets in ES)\n    groupAggregations.forEach(groupAggregation => {\n      let groups = [];\n\n      const groupDefs = _esAgg2kendo(\n        groupAggregation.group,\n        groupAggregation.missing,\n        groupAggregation.fieldKey);\n\n      if (!aggregationsOnly) {\n        // Then distribute the data items in the groups\n        groups = dataItems.fillInGroups(groupDefs, items, fields[groupAggregation.fieldKey]);\n      } else {\n        groups = groupDefs.keys.map(function (key) {\n          return groupDefs.map[key];\n        });\n      }\n\n      // Case when there is subgroups. Solve it recursively.\n      let hasSubgroups = false;\n      if (groupAggregation.group.buckets && groupAggregation.group.buckets[0]) {\n        Object.keys(groupAggregation.group.buckets[0]).forEach(bucketKey => {\n          if (bucketKey.substr(bucketKey.length - 6) === '_group' ||\n            bucketKey.substr(bucketKey.length - 7) === '_nested') {\n            hasSubgroups = true;\n          }\n        });\n      }\n      groups.forEach(group => {\n        if (hasSubgroups) {\n          group.hasSubgroups = true;\n          group.items = _es2kendo(group.items, group.bucket, fields, aggregationsOnly);\n        }\n        delete group.bucket;\n      });\n\n      allGroups = allGroups.concat(groups);\n    });\n  }\n\n  return allGroups;\n}\n\n// Transform a single bucket aggregation into kendo groups definitions\n// Does not fill up the data items\nfunction _esAgg2kendo(groupAggregation, missingAggregation, fieldKey) {\n  const groupsMap = {};\n  const groupKeys = [];\n\n  // Each bucket in ES aggregation result is a group\n  groupAggregation.buckets.forEach(bucket => {\n    const bucketKey = bucket.key_as_string || bucket.key;\n    groupKeys.push(bucketKey);\n    groupsMap[bucketKey] = {\n      field: fieldKey,\n      value: bucketKey,\n      hasSubgroups: false,\n      aggregates: aggregations.es2kendo(bucket),\n      items: [],\n      bucket: bucket\n    };\n    groupsMap[bucketKey].aggregates[fieldKey] = {\n      count: bucket.doc_count\n    };\n  });\n\n  // Special case for the missing value\n  groupsMap[''] = {\n    field: fieldKey,\n    value: '',\n    hasSubgroups: false,\n    aggregates: aggregations.es2kendo(missingAggregation),\n    items: [],\n    bucket: missingAggregation\n  };\n  groupsMap[''].aggregates[fieldKey] = {\n    count: missingAggregation.doc_count\n  };\n\n  return {\n    map: groupsMap,\n    keys: groupKeys\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/groups.js\n **/","import * as esUtils from './es-utils';\nexport const kendo2es = _kendo2es;\nexport const es2kendo = _es2kendo;\n\nconst kendoToESAgg = {\n  count: 'cardinality',\n  min: 'min',\n  max: 'max',\n  sum: 'sum',\n  average: 'avg'\n};\n\n// Transform kendo aggregates into ES metric aggregations\nfunction _kendo2es(aggregate, fields, nestedFields, esMappingKey, filter, groupNestedPath) {\n  const esAggs = {};\n\n  (aggregate || []).forEach(aggItem => {\n    const field = fields[aggItem.field];\n    let nestedPath = field.esNestedPath;\n    let aggsWrapper = esAggs;\n    if (groupNestedPath !== nestedPath) {\n      const previousPathParts = [];\n      if (groupNestedPath && nestedPath.indexOf(groupNestedPath) !== 0) {\n        esAggs.group_reverse_nested = esAggs.group_reverse_nested || {\n          reverse_nested: {},\n          aggregations: {}\n        };\n        aggsWrapper = esAggs.group_reverse_nested.aggregations;\n      } else if (groupNestedPath) {\n        nestedPath = nestedPath.substr(groupNestedPath.length + 1, nestedPath.length);\n      }\n\n      nestedPath.split('.').forEach(nestedPathPart => {\n        previousPathParts.push(nestedPathPart);\n        const currentPath = groupNestedPath ?\n          groupNestedPath + '.' + previousPathParts.join('.') :\n          previousPathParts.join('.');\n        const fullCurrentPath = esMappingKey ? esMappingKey + '.' + currentPath : currentPath;\n        const currentFields = nestedFields[currentPath];\n        if (!currentFields) return;\n        if (!aggsWrapper[currentPath]) {\n          aggsWrapper[currentPath + '_filter_nested'] = aggsWrapper[currentPath + '_filter_nested'] || {\n            nested: {\n              path: fullCurrentPath\n            },\n            aggregations: {}\n          };\n          aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'] =\n            aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'] || {\n              filter: esUtils.innerHitsFilter(fullCurrentPath, null, filter),\n              aggregations: {}\n            };\n        }\n        aggsWrapper = aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'].aggregations;\n      });\n    }\n\n    aggsWrapper[aggItem.field + '_' + aggItem.aggregate] = {};\n    aggsWrapper[aggItem.field + '_' + aggItem.aggregate][kendoToESAgg[aggItem.aggregate]] = {\n      field: field.esAggName\n    };\n  });\n\n  return esAggs;\n}\n\n// Transform aggregation results from a ES query to kendo aggregates\nfunction _es2kendo(aggregations, previousAggregates) {\n  const aggregates = previousAggregates || {};\n  aggregations = aggregations || {};\n  Object.keys(aggregations).forEach(aggKey => {\n    if (!aggregations[aggKey]) return;\n    ['count', 'min', 'max', 'average', 'sum'].forEach(aggType => {\n      const suffixLength = aggType.length + 1;\n      if (aggKey.substr(aggKey.length - suffixLength) === '_' + aggType) {\n        const fieldKey = aggKey.substr(0, aggKey.length - suffixLength);\n        aggregates[fieldKey] = aggregates[fieldKey] || {};\n        aggregates[fieldKey][aggType] = aggregations[aggKey].value;\n      }\n    });\n\n    if (aggKey.substr(aggKey.length - 7) === '_nested' || aggKey.substr(aggKey.length - 7) === '_filter') {\n      // recursivity on intermediate levels\n      _es2kendo(aggregations[aggKey], aggregates);\n    }\n\n  });\n  return aggregates;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/aggregations.js\n **/","// Some function that work on ES queries to deal with nested levels and other\n// difficulties\n\nexport const innerHits = _innerHits;\nexport const innerHitsFilter = _innerHitsFilter;\n\n// Get a root inner_hits definition to fetch all nested/parent/child docs\nfunction _innerHits(nestedFields, esMappingKey, subTypes, sort, filter) {\n  const innerHits = {};\n  Object.keys(nestedFields).forEach(nestedPath => {\n    let previousLevelInnerHits = innerHits;\n    const previousPathParts = [];\n    nestedPath.split('.').forEach(nestedPathPart => {\n      previousPathParts.push(nestedPathPart);\n      const currentPath = previousPathParts.join('.');\n      const fullCurrentPath = esMappingKey ? esMappingKey + '.' + currentPath : currentPath;\n      const currentFields = nestedFields[currentPath];\n      if (!currentFields) {\n        return;\n      }\n      if (!previousLevelInnerHits[currentPath]) {\n        previousLevelInnerHits[currentPath] = {\n          path: {\n            [fullCurrentPath]: {\n              _source: currentFields,\n              size: 10000,\n              sort: sort,\n              query: {\n                filtered: {\n                  filter: _innerHitsFilter(fullCurrentPath, null, filter)\n                }\n              }\n            }\n          }\n        };\n      }\n      if (currentPath !== nestedPath) {\n        previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits =\n          previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits || {};\n        previousLevelInnerHits =\n          previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits;\n      }\n    });\n  });\n\n  Object.keys(subTypes).forEach(subType => {\n    const currentFields = subTypes[subType];\n    innerHits[subType] = {\n      type: {\n        [subType]: {\n          _source: currentFields,\n          size: 10000,\n          sort: sort,\n          query: {\n            filtered: {\n              filter: _innerHitsFilter(null, subType, filter)\n            }\n          }\n        }\n      }\n    };\n  });\n  return innerHits;\n}\n\n// Traverse the filter to keep only the parts that concern\n// a nesting path\nfunction _innerHitsFilter(nestedPath, subType, filter) {\n  filter = $.extend(true, {}, filter);\n  const logicFilter = filter.or || filter.and;\n  if (logicFilter) {\n    logicFilter.filters = logicFilter.filters.filter(childFilter => {\n      return childFilter.and || childFilter.or ||\n        (childFilter.nested && childFilter.nested.path === nestedPath) ||\n        (childFilter.not && childFilter.not.nested && childFilter.not.nested.path === nestedPath) ||\n        (childFilter.has_child && childFilter.has_child.type === subType) ||\n        (childFilter.not && childFilter.not.has_child && childFilter.not.has_child.type === subType) ||\n        (childFilter.has_parent && childFilter.has_parent.type === subType) ||\n        (childFilter.not && childFilter.not.has_parent && childFilter.not.has_parent.type === subType);\n    }).map(childFilter => {\n      if (childFilter.nested) {\n        return childFilter.nested.filter;\n      } else if (childFilter.not && childFilter.not.nested) {\n        return {\n          not: childFilter.not.nested.filter\n        };\n      } else if (childFilter.has_child) {\n        return childFilter.has_child.filter;\n      } else if (childFilter.not && childFilter.not.has_child) {\n        return {\n          not: childFilter.not.has_child.filter\n        };\n      } else if (childFilter.has_parent) {\n        return childFilter.has_parent.filter;\n      } else if (childFilter.not && childFilter.not.has_parent) {\n        return {\n          not: childFilter.not.has_parent.filter\n        };\n      } else {\n        return _innerHitsFilter(nestedPath, childFilter);\n      }\n    });\n  }\n  return filter;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/es-utils.js\n **/","export const fillInGroups = _fillInGroups;\nexport const fromHits = _fromHits;\n\n// distribute data items in groups based on a field value\nfunction _fillInGroups(groupDefs, dataItems, field) {\n  const groups = [];\n  dataItems.forEach(function (dataItem) {\n    let group = groupDefs.map[dataItem[field.key] || ''];\n\n    // If no exact match, then we may be in some range aggregation ?\n    if (!group) {\n      const fieldValue = field.type === 'date' ? new Date(dataItem[field.key]) : dataItem[field.key];\n\n      for (let i = 0; i < groupDefs.keys.length; i++) {\n        const groupDefValue = field.type === 'date' ? new Date(groupDefs.keys[i]) : groupDefs.keys[i];\n        if (fieldValue >= groupDefValue) {\n          const groupDefNextValue = groupDefs.keys[i + 1] && (field.type === 'date' ?\n            new Date(groupDefs.keys[i + 1]) : groupDefs.keys[i + 1]);\n          if (!groupDefNextValue || fieldValue < groupDefNextValue) {\n            group = groupDefs.map[groupDefs.keys[i]];\n          }\n        }\n      }\n    }\n\n    if (!group) {\n      throw new Error('No group found, val: ' + dataItem[field.key] + ' field: ' + field.key);\n    }\n    group.items.push(dataItem);\n    if (group.items.length === 1) {\n      groups.push(group);\n    }\n  });\n  return groups;\n}\n\n// Mimic fetching values from _source as the 'fields' functionality\n// would have done it.\n// We do not use the native 'fields' due to this bug:\n// https://github.com/elastic/elasticsearch/issues/14475\nfunction _getValuesFromSource(source, pathParts) {\n  let values = [];\n  const value = source[pathParts[0]];\n  if (value === undefined) {\n    return [];\n  }\n\n  if (pathParts.length > 1) {\n\n    // recursivity is not over, there remain some path parts\n    if ($.isArray(value)) {\n      value.forEach(function (valueItem) {\n        values = values.concat(_getValuesFromSource(valueItem, pathParts.slice(1)));\n      });\n    } else {\n      values = _getValuesFromSource(value, pathParts.slice(1));\n    }\n  } else {\n\n    // recursivity, we should be in a leaf value\n    if ($.isArray(value)) {\n      values = value;\n    } else {\n      values = [value];\n    }\n  }\n  return values;\n}\n\n// Transform hits from the ES query in to data items for kendo grid\n// The difficulty is that hits can contain inner hits and that some\n// fields can be multi-valued\nfunction _fromHits(hits, fields, innerPath) {\n\n  let dataItems = [];\n  hits.forEach(hit => {\n    const hitSource = hit._source || {};\n    const dataItem = {};\n\n    dataItem.id = [hit._id];\n    Object.keys(fields).filter(fieldKey => {\n      const field = fields[fieldKey];\n\n      // Keep only the fields that are part of this nested/parent/child\n      if (innerPath === undefined) {\n        return !(field.esNestedPath || field.esChildType || field.esParentType);\n      } else {\n        return field.esNestedPath === innerPath ||\n          field.esChildType === innerPath ||\n          field.esParentType === innerPath;\n      }\n    }).forEach(function (fieldKey) {\n      const field = fields[fieldKey];\n      let values = _getValuesFromSource(hitSource, field.esNameSplit);\n\n      // special case field that is a date deep down by displayed as a number\n      if (field.duration) {\n        if (!moment) {\n          throw new Error('Working on durations requires to load momentjs library');\n        }\n      }\n\n      if (field.duration === 'beforeToday') {\n        values = values.map(value => {\n          return moment().startOf('day').diff(moment(value).startOf('day'), 'days');\n        });\n      }\n\n      if (field.duration === 'afterToday') {\n        values = values.map(value => {\n          return moment(value).startOf('day').diff(moment().startOf('day'), 'days');\n        });\n      }\n\n      if (values) {\n        if (field.esMultiSplit) {\n          if (values && values.length) {\n            dataItem[fieldKey] = values;\n          } else {\n            dataItem[fieldKey] = [null];\n          }\n        } else {\n          dataItem[fieldKey] = values.join(field.esMultiSeparator || '\\n');\n        }\n      }\n    });\n\n    // Multiply and fill items based on nesting levels\n    let splittedItems = [dataItem];\n    Object.keys(hit.inner_hits || {}).forEach(function (innerHitKey) {\n      const nestedItems =\n        _fromHits(hit.inner_hits[innerHitKey].hits.hits, fields, innerHitKey);\n      const newSplittedDataItems = [];\n      splittedItems.forEach(function (splittedItem) {\n        if (nestedItems.length) {\n          nestedItems.forEach(function (nestedItem) {\n            const mergedItem = {};\n            Object.keys(nestedItem).forEach(function (key) {\n              mergedItem[key] = nestedItem[key];\n            });\n            Object.keys(splittedItem).forEach(function (key) {\n              mergedItem[key] = splittedItem[key];\n            });\n            newSplittedDataItems.push(mergedItem);\n          });\n        } else {\n          newSplittedDataItems.push(splittedItem);\n        }\n      });\n      splittedItems = newSplittedDataItems;\n    });\n\n    dataItems = dataItems.concat(splittedItems);\n\n  });\n  return _splitMultiValues(dataItems);\n}\n\n// Split lines of data items based on their optionally multipl items\n// Example: [{a:[1,2],b:[3]}] -> [{a:1,b:3},{a:2,b:3}]\nfunction _splitMultiValues(items) {\n  let results = [];\n\n  // Iterates on items in the array and multiply based on multiple values\n  items.forEach(item => {\n    let itemResults = [{}];\n\n    // Iterate on properties of item\n    Object.keys(item).forEach(k => {\n      const partialItemResults = [];\n\n      // Iterate on the multiple values of this property\n      if (item[k] && item[k].constructor === Array) {\n        item[k].forEach(val => {\n          itemResults.forEach(result => {\n\n            // Clone the result to create variants with the different values of current key\n            const newResult = {};\n            Object.keys(result).forEach(k2 => newResult[k2] = result[k2]);\n            newResult[k] = val;\n            partialItemResults.push(newResult);\n          });\n        });\n      } else {\n        itemResults.forEach(result => {\n          result[k] = item[k];\n          partialItemResults.push(result);\n        });\n      }\n      itemResults = partialItemResults;\n    });\n\n    results = results.concat(itemResults);\n  });\n  return results;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data-items.js\n **/","export const kendo2es = _kendo2es;\n\n// Transform a tree of kendo filters into a tree of ElasticSearch filters\nfunction _kendo2es(kendoFilters, fields) {\n  let filters;\n\n  // logicalConnective can be \"and\" or \"or\"\n  let logicalConnective = 'and';\n\n  if (kendoFilters.operator) {\n    filters = [kendoFilters];\n  } else if (kendoFilters.logic) {\n    logicalConnective = kendoFilters.logic;\n    filters = kendoFilters.filters || [];\n  } else if (kendoFilters.constructor === Array) {\n    filters = kendoFilters;\n  } else {\n    throw new Error('Unsupported filter object: ' + kendoFilters);\n  }\n\n  const esFilters = [];\n  const esNestedFilters = {};\n\n  filters.forEach(filter => {\n    if (filter.logic) {\n      esFilters.push(_kendo2es(filter, fields));\n    } else {\n      const field = fields[filter.field];\n      if (!field) {\n        throw new Error('Unknown field in filter: ' + filter.field);\n      }\n      let esFilter = {\n        query: {\n          query_string: {\n            query: _filterParam(filter, fields),\n            // support uppercase/lowercase and accents\n            analyze_wildcard: true\n          }\n        }\n      };\n      if (field.esNestedPath) {\n        const esNestedFilter = esNestedFilters[field.esNestedPath] || {\n          nested: {\n            path: field.esFullNestedPath,\n            filter: {}\n          }\n        };\n        esNestedFilter.nested.filter[logicalConnective] = esNestedFilter.nested.filter[logicalConnective] || {\n          filters: []\n        };\n        esNestedFilter.nested.filter[logicalConnective].filters.push(esFilter);\n        if (!esNestedFilters[field.esNestedPath]) {\n          esFilter = esNestedFilters[field.esNestedPath] = esNestedFilter;\n        } else {\n          esFilter = null;\n        }\n      } else if (field.esParentType) {\n        esFilter = {\n          has_parent: {\n            type: field.esParentType,\n            filter: esFilter\n          }\n        };\n      } else if (field.esChildType) {\n        esFilter = {\n          has_child: {\n            type: field.esChildType,\n            filter: esFilter\n          }\n        };\n      }\n\n      if (esFilter) {\n        esFilters.push(esFilter);\n      }\n\n    }\n  });\n\n  const result = {};\n  result[logicalConnective] = {\n    filters: esFilters\n  };\n  return result;\n}\n\n// Transform a single kendo filter in a string\n// that can be used to compose a ES query_string query\nfunction _filterParam(kendoFilter, fields) {\n\n  // Boolean filter seems to forget the operator sometimes\n  kendoFilter.operator = kendoFilter.operator || 'eq';\n\n  // Use the filter field name except for contains\n  // that should use classical search instead of regexp\n  const field = fields[kendoFilter.field];\n\n  // special case field that is a date deep down by displayed as a number\n  if (field.duration) {\n    if (!moment) {\n      throw new Error('Working on durations requires to load momentjs library');\n    }\n  }\n\n  if (field.duration === 'beforeToday') {\n    kendoFilter.value = moment().startOf('day').subtract(kendoFilter.value, 'days').format();\n    if (kendoFilter.operator === 'lt') kendoFilter.operator = 'gt';\n    else if (kendoFilter.operator === 'lte') kendoFilter.operator = 'gte';\n    else if (kendoFilter.operator === 'gt') kendoFilter.operator = 'lt';\n    else if (kendoFilter.operator === 'gte') kendoFilter.operator = 'lte';\n  }\n\n  if (field.duration === 'afterToday') {\n    kendoFilter.value = moment().startOf('day').add(kendoFilter.value, 'days').format();\n  }\n\n  let fieldName;\n  if (kendoFilter.operator === 'search') {\n    fieldName = field.esSearchName;\n  } else {\n    fieldName = field.esFilterName;\n  }\n\n  const fieldEscaped = _asESParameter(fieldName);\n  const valueEscaped = _asESParameter(kendoFilter.value, kendoFilter.operator);\n\n  const simpleBinaryOperators = {\n    eq: '',\n    search: '',\n    lt: '<',\n    lte: '<=',\n    gt: '>',\n    gte: '>='\n  };\n\n  if (simpleBinaryOperators[kendoFilter.operator] !== void 0) {\n    const esOperator = simpleBinaryOperators[kendoFilter.operator];\n    return fieldEscaped + ':' + esOperator + valueEscaped;\n  } else {\n    let expression;\n    switch (kendoFilter.operator) {\n      case 'neq':\n        return 'NOT (' + fieldEscaped + ':' + valueEscaped + ')';\n      case 'contains':\n        return '(' + fieldEscaped + ':*' + valueEscaped + '*)';\n      case 'doesnotcontain':\n        return 'NOT (' + fieldEscaped + ':*' + valueEscaped + '*)';\n      case 'startswith':\n        return fieldEscaped + ':' + valueEscaped + '*';\n      case 'endswith':\n        return fieldEscaped + ':*' + valueEscaped;\n      case 'missing':\n        if (field.esNestedPath || field.esParentType || field.esChildType) {\n          // missing in a nested document should be implemented as a \"not nested exists\"\n          // but this is not really doable when mixing with other filters\n          // see https://github.com/elastic/elasticsearch/issues/3495\n          throw new Error('missing filter is not supported on nested fields');\n        }\n        expression = '_missing_:' + fieldEscaped;\n        if (field.type === 'string') {\n          expression += ' OR (' + fieldEscaped + ':\"\")';\n        }\n        return expression;\n      case 'exists':\n        expression = '_exists_:' + fieldEscaped;\n        if (field.type === 'string') {\n          expression += ' AND NOT(' + fieldEscaped + ':\"\")';\n        }\n        return expression;\n      default:\n        throw new Error('Unsupported Kendo filter operator: ' + kendoFilter.operator);\n    }\n  }\n}\n\n// Escape values so that they are suitable as an elasticsearch query_string query parameter\nconst escapeValueRegexp = /[+\\-&|!()\\{}\\[\\]^:\"~*?:\\/ ]/g;\nconst escapeSearchValueRegexp = /[+\\-&|!()\\{}\\[\\]^:~:\\/]/g;\n\nfunction _asESParameter(value, operator) {\n  if (value.constructor === Date) {\n    value = value.toISOString();\n  } else if (typeof value === 'boolean' || typeof value === 'number') {\n    value = '' + value;\n  }\n\n  // For the special 'search' operator we allow some wildcard and other characters\n  if (operator === 'search') {\n    value = value.replace('\\\\', '\\\\\\\\');\n    if (((value.match(/\"/g) || []).length % 2) === 1) {\n      value = value.replace(/\"/g, '\\\\\"');\n    }\n    value = value.replace(escapeSearchValueRegexp, '\\\\$&');\n    return value;\n  }\n  return value.replace('\\\\', '\\\\\\\\').replace(escapeValueRegexp, '\\\\$&');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/filters.js\n **/","export const fromMapping = _fromMapping;\nexport const fill = _fill;\n\n// Transform a mapping definition from ElasticSearch into a kendo fields map\n// This utility function is exposed as it can be interesting to use it before instantiating\n// the actual datasource\n// @param mapping - An elasticsearch mapping\nfunction _fromMapping(\n  mapping, model, fields, prefix, esPrefix, nestedPath) {\n  fields = fields || {};\n  prefix = prefix || '';\n  Object.keys(mapping.properties || {}).forEach(propertyKey => {\n    const property = mapping.properties[propertyKey];\n    const curedPropertyKey = asKendoPropertyKey(propertyKey);\n    const prefixedName = prefix ? prefix + '_' + curedPropertyKey : curedPropertyKey;\n    const esName = esPrefix ? esPrefix + '.' + propertyKey : propertyKey;\n\n    if (property.type === 'nested') {\n      // Case where the property is a nested object\n      const subNestedPath = nestedPath ? nestedPath + '.' + esName : esName;\n      _fromMapping(property, model, fields, prefixedName, '', subNestedPath);\n    } else if (property.properties) {\n      // Case where the property is a non nested object with properties\n      _fromMapping(property, model, fields, prefixedName, esName, nestedPath);\n    } else if (property.type === 'object') {\n      // Case where the property is a non nested object with zero subproperties. do nothing.\n    } else {\n      // Finally case of a leaf property\n      const field = fields[prefixedName] = fields[prefixedName] || {};\n\n      // if the field was already defined with a nested path,\n      // then we are in the case of field both nested and included in parent\n      // then we should not consider it as a real leaf property\n      if (!field.esNestedPath) {\n        field.type = field.type || property.type;\n\n        // ES supports a variety of numeric types. In JSON and kendo it is simply 'number'.\n        if (['float', 'double', 'integer', 'long', 'short', 'byte'].indexOf(field.type) !== -1) {\n          field.type = 'number';\n        }\n\n        // Default is splitting data lines except for string fields\n        if (field.type !== 'string') {\n          field.esMultiSplit = true;\n        }\n\n        if (nestedPath) {\n          field.esNestedPath = nestedPath;\n        }\n        field.esName = esName;\n\n        // When the field is not analyzed, the default string subfields should not be applied.\n        if (property.index === 'not_analyzed') {\n          field.esSearchSubField = null;\n          field.esFilterSubField = null;\n          field.esAggSubField = null;\n        }\n      }\n    }\n  });\n\n  _fill(fields, model);\n\n  return fields;\n};\n\n// Associate Kendo field names to ElasticSearch field names.\n// We have to allow ElasticSearch field names to be different\n// because ES likes an \"@\" and/or dots in field names while Kendo fails on that.\n// Filtering and aggregating can be based on a a different field if esFilterName\n// or esAggName are defined or on a subfield if esFilterSubField or esAggSubField are defined.\n// Typical use case is the main field is analyzed, but it has a subfield that is not\n// (or only with a minimal analyzer)\nfunction _fill(fields, model) {\n  for (const k in fields) {\n    if (fields.hasOwnProperty(k)) {\n      const field = fields[k];\n      field.key = k;\n      field.esName = field.esName || k;\n      field.esNameSplit = field.esName.split('.');\n      field.esFullNestedPath = field.esNestedPath;\n      if (model.esMappingKey) {\n        field.esFullNestedPath = model.esMappingKey + '.' + field.esFullNestedPath;\n      }\n      if (!field.esSearchName) {\n        field.esSearchName = field.esName;\n        if (field.hasOwnProperty('esSearchSubField')) {\n          if (field.esSearchSubField) {\n            field.esSearchName += '.' + field.esSearchSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.search) {\n          field.esSearchName += '.' + model.esStringSubFields.search;\n        }\n        if (field.esNestedPath) {\n          field.esSearchName = field.esNestedPath + '.' + field.esSearchName;\n        }\n      }\n      if (!field.esFilterName) {\n        field.esFilterName = field.esName;\n        if (field.hasOwnProperty('esFilterSubField')) {\n          if (field.esFilterSubField) {\n            field.esFilterName += '.' + field.esFilterSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.filter) {\n          field.esFilterName += '.' + model.esStringSubFields.filter;\n        }\n        if (field.esNestedPath) {\n          field.esFilterName = field.esNestedPath + '.' + field.esFilterName;\n        }\n      }\n      if (!field.esAggName) {\n        field.esAggName = field.esName;\n        if (field.hasOwnProperty('esAggSubField')) {\n          if (field.esAggSubField) {\n            field.esAggName += '.' + field.esAggSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.agg) {\n          field.esAggName += '.' + model.esStringSubFields.agg;\n        }\n        if (field.esNestedPath) {\n          field.esAggName = field.esFullNestedPath + '.' + field.esAggName;\n        }\n      }\n    }\n  }\n}\n\n// Get a property key and transform it in a suitable key for kendo\n// the constraint is that kendo needs a key suitable for javascript object's dot notation\n// i.e a valid js identifier with alphanumeric chars + '_' and '$'\nfunction asKendoPropertyKey(value) {\n  return value.replace(/[^a-zA-z0-9_$]/g, '_');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/fields.js\n **/"],"sourceRoot":""}